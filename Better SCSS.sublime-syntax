%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: Better SCSS
file_extensions:
  - scss
scope: source.scss

variables:
  forward_ident_boundary: '(?![a-zA-Z0-9_\-])'

  variable_token: '(\$)[a-zA-Z_][a-zA-Z0-9_\-]*{{forward_ident_boundary}}'

  ident_token: '(?:-)?[a-zA-Z_][a-zA-Z0-9_\-]*{{forward_ident_boundary}}'

  eltname: '[a-zA-Z_][a-zA-Z0-9_\-]*{{forward_ident_boundary}}'
  id_or_name: '[a-zA-Z][a-zA-Z0-9_\-]*{{forward_ident_boundary}}'

  pseudo_element_name: '(?:-)?[a-zA-Z][a-zA-Z0-9_\-]*{{forward_ident_boundary}}'
  pseudo_class_name: '(?:-)?[a-zA-Z][a-zA-Z0-9_\-]*{{forward_ident_boundary}}'

  attribute_name: '{{ident_token}}'
  function_name: '{{ident_token}}'
  property_name: '{{ident_token}}'
  class_name: '{{id_or_name}}'
  id_name: '{{id_or_name}}'

  pseudo_classes: 'active|any|checked|default|dir|disabled|empty|enabled|first|first-child|first-of-type|fullscreen|focus|hover|indeterminate|in-range|invalid|lang|last-child|last-of-type|left|link|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|optional|out-of-range|read-only|read-write|required|right|root|scope|target|valid|visited'

contexts:
  prototype:
    - scope: comment.line.scss
      match: '(//).*$(?:\n)?'
    - scope: punctuation.definition.comment.scss
      match: '/\*'
      push:
        - meta_scope: comment.block.scss
        - scope: punctuation.definition.comment.scss
          match: '\*/'
          pop: true

  main:
    - include: variable-declars
    - include: at-rules
    - include: selectors
    - include: blocks

  other-variables:
    - scope: variable.my-other.scss
      match: '{{variable_token}}'
      captures:
        1: punctuation.definition.variable

  function-paren:
    - scope: punctuation.section.arguments.begin.scss
      match: '\('
      set:
        - scope: punctuation.separator.arguments.scss
          match: ','
        - include: basic-values
        - scope: punctuation.section.arguments.end.scss
          match: '\)'
          pop: true

  function-name:
    - scope: support.function.css.scss
      match: '\b(?:linear-gradient){{forward_ident_boundary}}'
      pop: true
    - scope: support.function.scss
      match: '\b(?:if|rgba|rgb|hsla|hsl){{forward_ident_boundary}}'
      pop: true
    - scope: variable.function.scss
      match: '{{function_name}}'
      pop: true

  function-blocks:
    - match: '(?={{function_name}}\()'
      push: [function-paren, function-name]

  property-terminator:
    - scope: punctuation.terminator.scss
      match: ';'
      pop: true
    - match: '(?=\S)'
      pop: true

  well-know-font-names:
    - scope: support.constant.font-name.scss
      match: '(?:helvetica|sans-serif|serif|monospace|cursive|fantasy)'

  well-known-values:
    - scope: support.constant.property-value.scss
      match: |
        (?x)\b(?:
          static|relative|absolute|fixed|
          inline-block|inline-table|inline-flex|inline-grid|inline|block|table|flex|grid|
          top|right|bottom|left|
          center|middle|
          opacity|
          ease-in-out|ease-in|ease-out|ease|
          italic|small-caps|
          bold|
          antialiased|grayscale|
          initial|unset|inherit|normal|none|auto
        ){{forward_ident_boundary}}
    - include: well-know-font-names

  scss-operators:
    - scope: keyword.operator.arithmetic.scss
      match: '[+\-*/]'
    - scope: keyword.operator.compare.scss
      match: '[><]=?'
    - scope: punctuation.separator.property-value.scss
      match: ','

  basic-values:
    - include: function-blocks
    - include: constants
    - include: well-known-values
    - include: quoted-strings
    - include: other-variables
    - scope: meta.ident_token.scss
      match: '{{ident_token}}'
    - include: scss-operators
    - include: basic-parens

  basic-parens:
    - scope: punctuation.parens.begin.scss
      match: '\('
      push:
        - include: basic-values
        - scope: punctuation.parens.end.scss
          match: '\)'
          pop: true

  property-values:
    - include: basic-values
    - scope: keyword.other.important.scss
      match: '!\s*important{{forward_ident_boundary}}'

  property-value-context:
    - include: property-values
    - match: '(?=;|\}|\{)'
      pop: true


  font-family-value-context:
    - include: quoted-strings
    - include: well-know-font-names
    - scope: string.unquoted.font-name.scss
      match: '(?:[a-zA-Z_][a-zA-Z0-9_\-]*)(?:\s+[a-zA-Z_][a-zA-Z0-9_\-]*)*{{forward_ident_boundary}}'
    - scope: punctuation.separator.property-values.scss
      match: ','
    - match: '(?=;|\}|\{)'
      pop: true


  variable-declars:
    - scope: variable.scss
      match: '{{variable_token}}(:)'
      captures:
        1: punctuation.definition.variable
        2: punctuation.separator.key-value.scss
      push: [property-terminator, property-value-context]
    - scope: variable.scss
      match: '{{variable_token}}'
      captures:
        1: punctuation.definition.variable

  well-know-property-name:
    - match: |-
        \b(?x)(
            display|width|background-color|height|position|font-family|font-weight
          | top|opacity|cursor|background-image|right|visibility|box-sizing
          | user-select|left|float|margin-left|margin-top|line-height
          | padding-left|z-index|margin-bottom|margin-right|margin
          | vertical-align|padding-top|white-space|border-radius|padding-bottom
          | padding-right|padding|bottom|clear|max-width|box-shadow|content
          | border-color|min-height|min-width|font-style|border-width
          | border-collapse|background-size|text-overflow|max-height|text-transform
          | text-shadow|text-indent|border-style|overflow-y|list-style-type
          | word-wrap|border-spacing|appearance|zoom|overflow-x|border-top-left-radius
          | border-bottom-left-radius|border-top-color|pointer-events
          | border-bottom-color|align-items|justify-content|letter-spacing
          | border-top-right-radius|border-bottom-right-radius|border-right-width
          | font-smoothing|border-bottom-width|border-right-color|direction
          | border-top-width|src|border-left-color|border-left-width
          | tap-highlight-color|table-layout|background-clip|word-break
          | transform-origin|resize|filter|backface-visibility|text-rendering
          | box-orient|transition-property|transition-duration|word-spacing
          | quotes|outline-offset|animation-timing-function|animation-duration
          | animation-name|transition-timing-function|border-bottom-style
          | border-bottom|transition-delay|transition|unicode-bidi|border-top-style
          | border-top|unicode-range|list-style-position|orphans|outline-width
          | line-clamp|order|flex-direction|box-pack|animation-fill-mode
          | outline-color|list-style-image|list-style|touch-action|flex-grow
          | border-left-style|border-left|animation-iteration-count
          | page-break-inside|box-flex|box-align|page-break-after|animation-delay
          | widows|border-right-style|border-right|flex-align|outline-style
          | outline|background-origin|animation-direction|fill-opacity
          | background-attachment|flex-wrap|transform-style|counter-increment
          | overflow-wrap|counter-reset|animation-play-state|animation
          | will-change|box-ordinal-group|image-rendering|mask-image|flex-flow
          | background-position-y|stroke-width|background-position-x|background-position
          | background-blend-mode|flex-shrink|flex-basis|flex-order|flex-item-align
          | flex-line-pack|flex-negative|flex-pack|flex-positive|flex-preferred-size
          | flex|user-drag|font-stretch|column-count|empty-cells|align-self
          | caption-side|mask-size|column-gap|mask-repeat|box-direction
          | font-feature-settings|mask-position|align-content|object-fit
          | columns|text-fill-color|clip-path|stop-color|font-kerning
          | page-break-before|stroke-dasharray|size|fill-rule|border-image-slice
          | column-width|break-inside|column-break-before|border-image-width
          | stroke-dashoffset|border-image-repeat|border-image-outset|line-break
          | stroke-linejoin|stroke-linecap|stroke-miterlimit|stroke-opacity
          | stroke|shape-rendering|border-image-source|border-image|border
          | tab-size|writing-mode|perspective-origin-y|perspective-origin-x
          | perspective-origin|perspective|text-align-last|text-align|clip-rule
          | clip|text-anchor|column-rule-color|box-decoration-break|column-fill
          | fill|column-rule-style|mix-blend-mode|text-emphasis-color
          | baseline-shift|dominant-baseline|page|alignment-baseline
          | column-rule-width|column-rule|break-after|font-variant-ligatures
          | transform-origin-y|transform-origin-x|transform|object-position
          | break-before|column-span|isolation|shape-outside|all
          | color-interpolation-filters|marker|marker-end|marker-start
          | marker-mid|color-rendering|color-interpolation|background-repeat-x
          | background-repeat-y|background-repeat|background|mask-type
          | flood-color|flood-opacity|text-orientation|mask-composite
          | text-emphasis-style|paint-order|lighting-color|shape-margin
          | text-emphasis-position|text-emphasis|shape-image-threshold
          | mask-clip|mask-origin|mask|font-variant-caps|font-variant-alternates
          | font-variant-east-asian|font-variant-numeric|font-variant-position
          | font-variant|font-size-adjust|font-size|font-language-override
          | font-display|font-synthesis|font|line-box-contain|text-justify
          | text-decoration-color|text-decoration-style|text-decoration-line
          | text-decoration|text-underline-position|grid-template|rotate
          | scale|translate|grid-template-columns|grid-template-rows
          | scroll-behavior|grid-column-start|grid-column-end|grid-column-gap
          | grid-row-start|grid-row-end|grid-auto-rows|grid-template-areas
          | grid-area|grid-auto-flow|grid-auto-columns|image-orientation
          | hyphens|overflow-scrolling|overflow|color-profile|kerning
          | nbsp-mode|color|image-resolution|grid-row|grid-column|blend-mode
          | azimuth|pause-after|pause-before|pause|pitch-range|pitch|text-height
          | system|negative|prefix|suffix|range|pad|fallback|additive-symbols
          | symbols|speak-as|speak|grid-gap|grid-row-gap
        ){{forward_ident_boundary}}
      scope: support.type.property-name.scss
      pop: true

  property-name:
    - scope: support.type.vendor-prefix.scss
      match: '-(?:webkit|moz(?:-(?:osx))?)-'
    - include: well-know-property-name
    - match: '{{property_name}}'
      pop: true
    - match: '(?=\S)'
      pop: true

  property-separator:
    - scope: punctuation.separator.key-value.scss
      match: ':'
      pop: true

  properties:
    - include: variable-declars
    - match: '(?={{property_name}}(:)(?: |$|(?!\b(?:[a-z]+)\b[^\{\};]*(?:\{|$))))'
      push:
        - scope: support.type.property-name.font-family.scss
          match: '\b(?:font-family){{forward_ident_boundary}}'
          set: [property-terminator, font-family-value-context, property-separator]
        - match: ''
          set: [property-terminator, property-value-context, property-separator, property-name]

  end-bracket:
    - scope: punctuation.definition.entity.scss
      match: '\]'
      pop: true
    - match: '(?=\S)'
      pop: true

  quoted-strings:
    - match: '(?=["''])'
      push: quoted-string

  string-escapes:
    - scope: constant.character.escape.scss
      match: '\\[a-f0-9]{1,6}'
    - scope: constant.character.escape.scss
      match: '\\.'
    - scope: invalid.illegal.newline.scss
      match: '\n'
      pop: true

  quoted-string:
    - scope: punctuation.definition.string.begin.scss
      match: "'"
      set: 
        - meta_include_prototype: false
        - meta_scope: string.quoted.single.css
        - include: string-escapes
        - scope: punctuation.definition.string.end.scss
          match: "'"
          pop: true
    - scope: punctuation.definition.string.begin.scss
      match: '"'
      set: 
        - meta_include_prototype: false
        - meta_scope: string.quoted.double.css
        - include: string-escapes
        - scope: punctuation.definition.string.end.scss
          match: '"'
          pop: true

  bracket-content:
    - scope: entity.other.attribute-name.scss
      match: '{{attribute_name}}'
    - scope: keyword.operator.attribute-selector.scss
      match: '(?:~|\||\^|\$|\*)?='
      set:
        - include: quoted-string
        - scope: string.unquoted.scss
          match: '[^\]\s]+'
          pop: true
        - match: '(?=\S)'
          pop: true
    - match: '(?=\S)'
      pop: true

  color-values:
      # https://www.w3.org/TR/CSS22/syndata.html#color-units
    - match: \b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow){{forward_ident_boundary}}
      scope: support.constant.color.w3c-standard-color-name.css
      # https://www.w3.org/TR/css3-color/#svg-color
    - match: \b(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rebeccapurple|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|turquoise|violet|wheat|whitesmoke|yellowgreen){{forward_ident_boundary}}
      scope: support.constant.color.w3c-extended-color-keywords.css
      # Special Color Keywords
      # https://www.w3.org/TR/css3-color/#currentcolor
      # https://www.w3.org/TR/css3-color/#transparent-def
    - match: \b((?i)currentColor|transparent){{forward_ident_boundary}}
      scope: support.constant.color.w3c-special-color-keyword.css
      # Hex Color
    - match: '(#)(\h{3}|\h{6}){{forward_ident_boundary}}'
      scope: constant.other.color.rgb-value.css
      captures:
        1: punctuation.definition.constant.css
      # RGBA Hexadecimal Colors
      # https://en.wikipedia.org/wiki/RGBA_color_space#RGBA_hexadecimal_.28word-order.29
    - match: '(#)\h{8}{{forward_ident_boundary}}'
      scope: constant.other.color.rgba-value.css
      captures:
        1: punctuation.definition.constant.css

  simple-numerics:
    - scope: constant.numeric.decimal.scss
      match: '\b\d+{{forward_ident_boundary}}'

  constants:
    - include: color-values
    - scope: constant.numeric.decimal.scss
      match: '(?<![a-zA-Z0-9_])[\+\-]?(?:[0-9]*\.)?[0-9]+'
      push:
        - scope: keyword.other.unit.scss
          match: '%'
        - scope: keyword.other.unit.scss
          match: '(?:px|mm|q|cm|in|pt|pc|em|ex|cap|ch|ic|rem|lh|rlh|vh|vw|vi|vb|vmin|vmax|s|deg|rad|turn|dpi|fr)\b'
        - match: ''
          pop: true

  simple-numerics-paren:
    - scope: punctuation.pseudo-class-paren.begin.scss
      match: '\('
      set:
        - include: simple-numerics
        - scope: constant.numeric.scss
          match: '(\d+|\-)?n\+\d+'
        - scope: support.constant.nth.scss
          match: \b(?:even|odd){{forward_ident_boundary}}
        - scope: punctuation.pseudo-class-paren.end.scss
          match: '\)'
          pop: true
    - match: '(?=\S)'
      pop: true


  unquoted-paren:
    - scope: punctuation.pseudo-class-paren.begin.scss
      match: '\('
      set:
        - scope: string.unquoted.scss
          match: '[^\)]+'
        - scope: punctuation.pseudo-class-paren.end.scss
          match: '\)'
          pop: true
    - match: '(?=\S)'
      pop: true

  selectors-paren:
    - scope: punctuation.pseudo-class-paren.begin.scss
      match: '\('
      set:
        - include: selectors
        - scope: punctuation.pseudo-class-paren.end.scss
          match: '\)'
          pop: true
    - match: '(?=\S)'
      pop: true

  at-rules:
    - scope: keyword.control.at-rule.scss
      match: '(@){{id_name}}'
      captures:
        1: punctuation.definition.entity.scss

  # begin-selector:

  pseudo-classes:
    - scope: punctuation.definition.entity.scss
      match: '(:)(?={{pseudo_class_name}})'
      push:
        - scope: entity.other.pseudo-class.scss
          match: '\b(?:not){{forward_ident_boundary}}'
          set: selectors-paren
        - scope: entity.other.pseudo-class.scss
          match: '\b(?:dir|lang){{forward_ident_boundary}}'
          set: unquoted-paren
        - scope: entity.other.pseudo-class.scss
          match: '\b(?:nth-child|nth-last-child|nth-last-of-type|nth-of-type){{forward_ident_boundary}}'
          set: simple-numerics-paren
        - scope: entity.other.pseudo-class.scss
          match: '\b(?:{{pseudo_classes}}){{forward_ident_boundary}}'
          pop: true
        - match: '{{pseudo_class_name}}'
          pop: true


  selector-then:
    - meta_scope: meta.selector.scss
    - scope: punctuation.separator.combinator.scss
      match: ','
    - scope: punctuation.separator.combinator.scss
      match: '\+'
    - scope: punctuation.separator.combinator.scss
      match: '~'
    - scope: punctuation.definition.entity.scss
      match: '\['
      push: [end-bracket, bracket-content]
    - scope: punctuation.separator.combinator.scss
      match: '>'
    - scope: entity.other.pseudo-element.scss
      match: '(::){{pseudo_element_name}}'
      captures:
        1: punctuation.definition.entity.scss
    - include: pseudo-classes
    - scope: entity.other.attribute-name.id.scss
      match: '(#){{id_name}}'
      captures:
        1: punctuation.definition.entity.scss
    - scope: entity.other.attribute-name.class.scss
      match: '(\.){{class_name}}'
      captures:
        1: punctuation.definition.entity.scss
    - scope: entity.name.tag.scss
      match: '&'
    - scope: entity.name.tag.scss
      match: '{{eltname}}'
    - match: '(?=\s+\{)'
      pop: true
    - match: '(?=\S)'
      pop: true


  selectors:
    - match: '(?=&|(::){{pseudo_element_name}}|(:){{pseudo_class_name}}|(#){{id_name}}|(\.){{class_name}}|{{eltname}}|>|\[)'
      push: selector-then


  blocks:
    - scope: punctuation.section.begin.scss
      match: '\{'
      push:
        - include: properties
        - include: at-rules
        - include: selectors
        - include: blocks
        - scope: punctuation.section.end.scss
          match: '\}'
          pop: true
